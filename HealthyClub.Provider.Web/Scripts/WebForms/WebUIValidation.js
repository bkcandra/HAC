function ValidatorUpdateDisplay(e) { if ("string" == typeof e.display) { if ("None" == e.display) return; if ("Dynamic" == e.display) return e.style.display = e.isvalid ? "none" : "inline", void 0 } navigator.userAgent.indexOf("Mac") > -1 && navigator.userAgent.indexOf("MSIE") > -1 && (e.style.display = "inline"), e.style.visibility = e.isvalid ? "hidden" : "visible" } function ValidatorUpdateIsValid() { Page_IsValid = AllValidatorsValid(Page_Validators) } function AllValidatorsValid(e) { if ("undefined" != typeof e && null != e) { var t; for (t = 0; t < e.length; t++) if (!e[t].isvalid) return !1 } return !0 } function ValidatorHookupControlID(e, t) { if ("string" == typeof e) { var i = document.getElementById(e); "undefined" != typeof i && null != i ? ValidatorHookupControl(i, t) : (t.isvalid = !0, t.enabled = !1) } } function ValidatorHookupControl(e, t) { if ("string" == typeof e.tagName) if ("INPUT" == e.tagName || "TEXTAREA" == e.tagName || "SELECT" == e.tagName) { if ("undefined" == typeof e.Validators) { e.Validators = new Array; var i; "radio" == e.type ? i = "onclick" : (i = "onchange", "string" == typeof t.focusOnError && "t" == t.focusOnError && ValidatorHookupEvent(e, "onblur", "ValidatedControlOnBlur(event); ")), ValidatorHookupEvent(e, i, "ValidatorOnChange(event); "), Page_TextTypes.test(e.type) && ValidatorHookupEvent(e, "onkeypress", "event = event || window.event; if (!ValidatedTextBoxOnKeyPress(event)) { event.cancelBubble = true; if (event.stopPropagation) event.stopPropagation(); return false; } ") } e.Validators[e.Validators.length] = t } else { var a; for (a = 0; a < e.childNodes.length; a++) ValidatorHookupControl(e.childNodes[a], t) } } function ValidatorHookupEvent(e, t, i) { var a = e[t]; "function" == typeof a ? (a = a.toString(), a = a.substring(a.indexOf("{") + 1, a.lastIndexOf("}"))) : a = "", e[t] = new Function("event", i + " " + a) } function ValidatorGetValue(e) { var t; return t = document.getElementById(e), "string" == typeof t.value ? t.value : ValidatorGetValueRecursive(t) } function ValidatorGetValueRecursive(e) { if ("string" == typeof e.value && ("radio" != e.type || 1 == e.checked)) return e.value; var t, i; for (t = 0; t < e.childNodes.length; t++) if (i = ValidatorGetValueRecursive(e.childNodes[t]), "" != i) return i; return "" } function Page_ClientValidate(e) { if (Page_InvalidControlToBeFocused = null, "undefined" == typeof Page_Validators) return !0; var t; for (t = 0; t < Page_Validators.length; t++) ValidatorValidate(Page_Validators[t], e, null); return ValidatorUpdateIsValid(), ValidationSummaryOnSubmit(e), Page_BlockSubmit = !Page_IsValid, Page_IsValid } function ValidatorCommonOnSubmit() { Page_InvalidControlToBeFocused = null; var e = !Page_BlockSubmit; return "undefined" != typeof window.event && null != window.event && (window.event.returnValue = e), Page_BlockSubmit = !1, e } function ValidatorEnable(e, t) { e.enabled = 0 != t, ValidatorValidate(e), ValidatorUpdateIsValid() } function ValidatorOnChange(e) { e = e || window.event, Page_InvalidControlToBeFocused = null; var t; t = "undefined" != typeof e.srcElement && null != e.srcElement ? e.srcElement : e.target; var i; if ("undefined" != typeof t.Validators ? i = t.Validators : "label" == t.tagName.toLowerCase() && (t = document.getElementById(t.htmlFor), i = t.Validators), i) for (var a = 0; a < i.length; a++) ValidatorValidate(i[a], null, e); ValidatorUpdateIsValid() } function ValidatedTextBoxOnKeyPress(e) { if (e = e || window.event, 13 == e.keyCode) { ValidatorOnChange(e); var t; return t = "undefined" != typeof e.srcElement && null != e.srcElement ? e.srcElement.Validators : e.target.Validators, AllValidatorsValid(t) } return !0 } function ValidatedControlOnBlur(e) { e = e || window.event; var t; t = "undefined" != typeof e.srcElement && null != e.srcElement ? e.srcElement : e.target, "undefined" != typeof t && null != t && Page_InvalidControlToBeFocused == t && (t.focus(), Page_InvalidControlToBeFocused = null) } function ValidatorValidate(e, t, i) { e.isvalid = !0, "undefined" != typeof e.enabled && 0 == e.enabled || !IsValidationGroupMatch(e, t) || "function" == typeof e.evaluationfunction && (e.isvalid = e.evaluationfunction(e), e.isvalid || null != Page_InvalidControlToBeFocused || "string" != typeof e.focusOnError || "t" != e.focusOnError || ValidatorSetFocus(e, i)), ValidatorUpdateDisplay(e) } function ValidatorSetFocus(e, t) { var i; if ("string" == typeof e.controlhookup) { var a; "undefined" != typeof t && null != t && (a = "undefined" != typeof t.srcElement && null != t.srcElement ? t.srcElement : t.target), "undefined" != typeof a && null != a && "string" == typeof a.id && a.id == e.controlhookup && (i = a) } if (("undefined" == typeof i || null == i) && (i = document.getElementById(e.controltovalidate)), !("undefined" == typeof i || null == i || "table" == i.tagName.toLowerCase() && "undefined" != typeof t && null != t || "input" == i.tagName.toLowerCase() && "hidden" == i.type.toLowerCase() || "undefined" != typeof i.disabled && null != i.disabled && 0 != i.disabled || "undefined" != typeof i.visible && null != i.visible && 0 == i.visible || !IsInVisibleContainer(i))) { if ("table" == i.tagName.toLowerCase() && ("undefined" == typeof __nonMSDOMBrowser || __nonMSDOMBrowser) || "span" == i.tagName.toLowerCase()) { var n = i.getElementsByTagName("input"), r = n[n.length - 1]; null != r && (i = r) } "undefined" != typeof i.focus && null != i.focus && (i.focus(), Page_InvalidControlToBeFocused = i) } } function IsInVisibleContainer(e) { return "undefined" != typeof e.style && ("undefined" != typeof e.style.display && "none" == e.style.display || "undefined" != typeof e.style.visibility && "hidden" == e.style.visibility) ? !1 : "undefined" != typeof e.parentNode && null != e.parentNode && e.parentNode != e ? IsInVisibleContainer(e.parentNode) : !0 } function IsValidationGroupMatch(e, t) { if ("undefined" == typeof t || null == t) return !0; var i = ""; return "string" == typeof e.validationGroup && (i = e.validationGroup), i == t } function ValidatorOnLoad() { if ("undefined" != typeof Page_Validators) { var i, val; for (i = 0; i < Page_Validators.length; i++) val = Page_Validators[i], "string" == typeof val.evaluationfunction && eval("val.evaluationfunction = " + val.evaluationfunction + ";"), "string" == typeof val.isvalid ? "False" == val.isvalid ? (val.isvalid = !1, Page_IsValid = !1) : val.isvalid = !0 : val.isvalid = !0, "string" == typeof val.enabled && (val.enabled = "False" != val.enabled), "string" == typeof val.controltovalidate && ValidatorHookupControlID(val.controltovalidate, val), "string" == typeof val.controlhookup && ValidatorHookupControlID(val.controlhookup, val); Page_ValidationActive = !0 } } function ValidatorConvert(e, t, i) { function a(e) { var t = i.cutoffyear % 100, a = i.cutoffyear - t; return e > t ? a - 100 + e : a + e } var n, r, o, s; if ("Integer" == t) return s = /^\s*[-\+]?\d+\s*$/, null == e.match(s) ? null : (n = parseInt(e, 10), isNaN(n) ? null : n); if ("Double" == t) return s = new RegExp("^\\s*([-\\+])?(\\d*)\\" + i.decimalchar + "?(\\d*)\\s*$"), o = e.match(s), null == o ? null : 0 == o[2].length && 0 == o[3].length ? null : (r = (null != o[1] ? o[1] : "") + (o[2].length > 0 ? o[2] : "0") + (o[3].length > 0 ? "." + o[3] : ""), n = parseFloat(r), isNaN(n) ? null : n); if ("Currency" == t) { var l, c, d = i.digits > 0, h = parseInt(i.groupsize, 10); return !isNaN(h) && h > 0 ? (l = "{1," + h + "}", c = "{" + h + "}") : l = c = "+", s = new RegExp("^\\s*([-\\+])?((\\d" + l + "(\\" + i.groupchar + "\\d" + c + ")+)|\\d*)" + (d ? "\\" + i.decimalchar + "?(\\d{0," + i.digits + "})" : "") + "\\s*$"), o = e.match(s), null == o ? null : 0 == o[2].length && d && 0 == o[5].length ? null : (r = (null != o[1] ? o[1] : "") + o[2].replace(new RegExp("(\\" + i.groupchar + ")", "g"), "") + (d && o[5].length > 0 ? "." + o[5] : ""), n = parseFloat(r), isNaN(n) ? null : n) } if ("Date" == t) { var p = new RegExp("^\\s*((\\d{4})|(\\d{2}))([-/]|\\. ?)(\\d{1,2})\\4(\\d{1,2})\\.?\\s*$"); o = e.match(p); var u, f, g; if (null != o && ("undefined" != typeof o[2] && 4 == o[2].length || "ymd" == i.dateorder)) u = o[6], f = o[5], g = 4 == o[2].length ? o[2] : a(parseInt(o[3], 10)); else { if ("ymd" == i.dateorder) return null; var m = new RegExp("^\\s*(\\d{1,2})([-/]|\\. ?)(\\d{1,2})(?:\\s|\\2)((\\d{4})|(\\d{2}))(?:\\sг\\.|\\.)?\\s*$"); if (o = e.match(m), null == o) return null; "mdy" == i.dateorder ? (u = o[3], f = o[1]) : (u = o[1], f = o[3]), g = "undefined" != typeof o[5] && 4 == o[5].length ? o[5] : a(parseInt(o[6], 10)) } f -= 1; var v = new Date(g, f, u); return 100 > g && v.setFullYear(g), "object" == typeof v && g == v.getFullYear() && f == v.getMonth() && u == v.getDate() ? v.valueOf() : null } return e.toString() } function ValidatorCompare(e, t, i, a) { var n, r, o = a.type; if (null == (n = ValidatorConvert(e, o, a))) return !1; if ("DataTypeCheck" == i) return !0; if (null == (r = ValidatorConvert(t, o, a))) return !0; switch (i) { case "NotEqual": return n != r; case "GreaterThan": return n > r; case "GreaterThanEqual": return n >= r; case "LessThan": return r > n; case "LessThanEqual": return r >= n; default: return n == r } } function CompareValidatorEvaluateIsValid(e) { var t = ValidatorGetValue(e.controltovalidate); if (0 == ValidatorTrim(t).length) return !0; var i = ""; "string" != typeof e.controltocompare || "undefined" == typeof document.getElementById(e.controltocompare) || null == document.getElementById(e.controltocompare) ? "string" == typeof e.valuetocompare && (i = e.valuetocompare) : i = ValidatorGetValue(e.controltocompare); var a = "Equal"; return "string" == typeof e.operator && (a = e.operator), ValidatorCompare(t, i, a, e) } function CustomValidatorEvaluateIsValid(val) { var value = ""; if ("string" == typeof val.controltovalidate && (value = ValidatorGetValue(val.controltovalidate), 0 == ValidatorTrim(value).length && ("string" != typeof val.validateemptytext || "true" != val.validateemptytext))) return !0; var args = { Value: value, IsValid: !0 }; return "string" == typeof val.clientvalidationfunction && eval(val.clientvalidationfunction + "(val, args) ;"), args.IsValid } function RegularExpressionValidatorEvaluateIsValid(e) { var t = ValidatorGetValue(e.controltovalidate); if (0 == ValidatorTrim(t).length) return !0; var i = new RegExp(e.validationexpression), a = i.exec(t); return null != a && t == a[0] } function ValidatorTrim(e) { var t = e.match(/^\s*(\S+(\s+\S+)*)\s*$/); return null == t ? "" : t[1] } function RequiredFieldValidatorEvaluateIsValid(e) { return ValidatorTrim(ValidatorGetValue(e.controltovalidate)) != ValidatorTrim(e.initialvalue) } function RangeValidatorEvaluateIsValid(e) { var t = ValidatorGetValue(e.controltovalidate); return 0 == ValidatorTrim(t).length ? !0 : ValidatorCompare(t, e.minimumvalue, "GreaterThanEqual", e) && ValidatorCompare(t, e.maximumvalue, "LessThanEqual", e) } function ValidationSummaryOnSubmit(e) { if ("undefined" != typeof Page_ValidationSummaries) { var t, i, a, n, r, o, s, l; for (i = 0; i < Page_ValidationSummaries.length; i++) if (t = Page_ValidationSummaries[i], t && (t.style.display = "none", !Page_IsValid && IsValidationGroupMatch(t, e))) { var c; if ("False" != t.showsummary) { switch (t.style.display = "", "string" != typeof t.displaymode && (t.displaymode = "BulletList"), t.displaymode) { case "List": n = "<br>", r = "", o = "", s = "<br>", l = ""; break; case "BulletList": default: n = "", r = "<ul>", o = "<li>", s = "</li>", l = "</ul>"; break; case "SingleParagraph": n = " ", r = "", o = "", s = " ", l = "<br>" } for (a = "", "string" == typeof t.headertext && (a += t.headertext + n), a += r, c = 0; c < Page_Validators.length; c++) Page_Validators[c].isvalid || "string" != typeof Page_Validators[c].errormessage || (a += o + Page_Validators[c].errormessage + s); a += l, t.innerHTML = a, window.scrollTo(0, 0) } if ("True" == t.showmessagebox) { a = "", "string" == typeof t.headertext && (a += t.headertext + "\r\n"); var d = Page_Validators.length - 1; for (c = 0; d >= c; c++) if (!Page_Validators[c].isvalid && "string" == typeof Page_Validators[c].errormessage) switch (t.displaymode) { case "List": a += Page_Validators[c].errormessage, d > c && (a += "\r\n"); break; case "BulletList": default: a += "- " + Page_Validators[c].errormessage, d > c && (a += "\r\n"); break; case "SingleParagraph": a += Page_Validators[c].errormessage + " " } alert(a) } } } } var Page_ValidationVer = "125", Page_IsValid = !0, Page_BlockSubmit = !1, Page_InvalidControlToBeFocused = null, Page_TextTypes = /^(text|password|file|search|tel|url|email|number|range|color|datetime|date|month|week|time|datetime-local)$/i; window.jQuery && function (e) { function t(e, t) { var i, a, n = {}, r = e.attributes, o = r.length, s = t.length; for (t = t.toLowerCase(), i = 0; o > i; i++) a = r[i], a.specified && a.name.substr(0, s).toLowerCase() === t && (n[a.name.substr(s)] = a.value); return n } function i(e) { return e = e.toLowerCase(), void 0 === p[e] ? e : p[e] } function a(a) { var n = t(a, d + "-"); e.each(n, function (e, t) { a[i(e)] = t }) } function n(t) { var i = e.inArray(t, Page_Validators); i >= 0 && Page_Validators.splice(i, 1) } function r(e, t) { p[e.toLowerCase()] = t } function o(t, i, r) { return e(t).find("[" + i + "='true']").each(function (t, i) { a(i), i.dispose = function () { n(i), i.dispose = null }, -1 === e.inArray(i, r) && r.push(i) }).length } function s(e) { var t = o(e, d, Page_Validators); return t += o(e, h, Page_ValidationSummaries) } function l() { "function" == typeof ValidatorOnLoad && ValidatorOnLoad(), "undefined" == typeof ValidatorOnSubmit && (window.ValidatorOnSubmit = function () { return Page_ValidationActive ? ValidatorCommonOnSubmit() : !0 }) } function c() { if (window.Sys && Sys.WebForms && Sys.WebForms.PageRequestManager) { var e, t, i = Sys.WebForms.PageRequestManager.getInstance(); i.get_isInAsyncPostBack() && (t = function () { s(document) && l(), i.remove_endRequest(t), t = null }, i.add_endRequest(t)), i.add_beginRequest(function (t, i) { e = i.get_postBackElement() }), i.add_pageLoaded(function (t, i) { var a, n, r = 0; if ("undefined" != typeof e) { for (n = i.get_panelsUpdated(), a = 0; a < n.length; a++) r += s(n[a]); for (n = i.get_panelsCreated(), a = 0; a < n.length; a++) r += s(n[a]); r && l() } }) } } var d = "data-val", h = "data-valsummary", p = { validationgroup: "validationGroup", focusonerror: "focusOnError" }; e(function () { "undefined" == typeof Page_Validators && (window.Page_Validators = []), "undefined" == typeof Page_ValidationSummaries && (window.Page_ValidationSummaries = []), "undefined" == typeof Page_ValidationActive && (window.Page_ValidationActive = !1), e.WebFormValidator = { addNormalizedAttribute: r, parse: s }, s(document) && l(), c() }) }(jQuery);