function WebForm_PostBackOptions(e, t, i, a, n, r, s) { this.eventTarget = e, this.eventArgument = t, this.validation = i, this.validationGroup = a, this.actionUrl = n, this.trackFocus = r, this.clientSubmit = s } function WebForm_DoPostBackWithOptions(e) { var t = !0; if (e.validation && "function" == typeof Page_ClientValidate && (t = Page_ClientValidate(e.validationGroup)), t && ("undefined" != typeof e.actionUrl && null != e.actionUrl && e.actionUrl.length > 0 && (theForm.action = e.actionUrl), e.trackFocus)) { var i = theForm.elements.__LASTFOCUS; if ("undefined" != typeof i && null != i) if ("undefined" == typeof document.activeElement) i.value = e.eventTarget; else { var a = document.activeElement; "undefined" != typeof a && null != a && ("undefined" != typeof a.id && null != a.id && a.id.length > 0 ? i.value = a.id : "undefined" != typeof a.name && (i.value = a.name)) } } e.clientSubmit && __doPostBack(e.eventTarget, e.eventArgument) } function WebForm_DoCallback(e, t, i, a, n, r) { var s = __theFormPostData + "__CALLBACKID=" + WebForm_EncodeCallback(e) + "&__CALLBACKPARAM=" + WebForm_EncodeCallback(t); theForm.__EVENTVALIDATION && (s += "&__EVENTVALIDATION=" + WebForm_EncodeCallback(theForm.__EVENTVALIDATION.value)); var o; try { o = new XMLHttpRequest } catch (l) { try { o = new ActiveXObject("Microsoft.XMLHTTP") } catch (l) { } } var c = !0; try { c = o && o.setRequestHeader } catch (l) { } var d = new Object; d.eventCallback = i, d.context = a, d.errorCallback = n, d.async = r; var h = WebForm_FillFirstAvailableSlot(__pendingCallbacks, d); if (r || (-1 != __synchronousCallBackIndex && (__pendingCallbacks[__synchronousCallBackIndex] = null), __synchronousCallBackIndex = h), c) { o.onreadystatechange = WebForm_CallbackComplete, d.xmlRequest = o; var p = theForm.action || document.location.pathname, u = p.indexOf("#"); if (-1 !== u && (p = p.substr(0, u)), !__nonMSDOMBrowser) { var f = p.indexOf("?"); if (-1 !== f) { var g = p.substr(0, f); -1 === g.indexOf("%") && (p = encodeURI(g) + p.substr(f)) } else -1 === p.indexOf("%") && (p = encodeURI(p)) } return o.open("POST", p, !0), o.setRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=utf-8"), o.send(s), void 0 } d.xmlRequest = new Object; var m = "__CALLBACKFRAME" + h, v = document.frames[m]; if (!v) { v = document.createElement("IFRAME"), v.width = "1", v.height = "1", v.frameBorder = "0", v.id = m, v.name = m, v.style.position = "absolute", v.style.top = "-100px", v.style.left = "-100px"; try { callBackFrameUrl && (v.src = callBackFrameUrl) } catch (l) { } document.body.appendChild(v) } var _ = window.setInterval(function () { if (v = document.frames[m], v && v.document) { window.clearInterval(_), v.document.write(""), v.document.close(), v.document.write('<html><body><form method="post"><input type="hidden" name="__CALLBACKLOADSCRIPT" value="t"></form></body></html>'), v.document.close(), v.document.forms[0].action = theForm.action; for (var i, a = __theFormPostCollection.length, n = 0; a > n; n++) if (i = __theFormPostCollection[n]) { var r = v.document.createElement("INPUT"); r.type = "hidden", r.name = i.name, r.value = i.value, v.document.forms[0].appendChild(r) } var s = v.document.createElement("INPUT"); s.type = "hidden", s.name = "__CALLBACKID", s.value = e, v.document.forms[0].appendChild(s); var o = v.document.createElement("INPUT"); if (o.type = "hidden", o.name = "__CALLBACKPARAM", o.value = t, v.document.forms[0].appendChild(o), theForm.__EVENTVALIDATION) { var l = v.document.createElement("INPUT"); l.type = "hidden", l.name = "__EVENTVALIDATION", l.value = theForm.__EVENTVALIDATION.value, v.document.forms[0].appendChild(l) } var c = v.document.createElement("INPUT"); c.type = "hidden", c.name = "__CALLBACKINDEX", c.value = h, v.document.forms[0].appendChild(c), v.document.forms[0].submit() } }, 10) } function WebForm_CallbackComplete() { for (var e = 0; e < __pendingCallbacks.length; e++) if (callbackObject = __pendingCallbacks[e], callbackObject && callbackObject.xmlRequest && 4 == callbackObject.xmlRequest.readyState) { __pendingCallbacks[e].async || (__synchronousCallBackIndex = -1), __pendingCallbacks[e] = null; var t = "__CALLBACKFRAME" + e, i = document.getElementById(t); i && i.parentNode.removeChild(i), WebForm_ExecuteCallback(callbackObject) } } function WebForm_ExecuteCallback(e) { var t = e.xmlRequest.responseText; if ("s" == t.charAt(0)) "undefined" != typeof e.eventCallback && null != e.eventCallback && e.eventCallback(t.substring(1), e.context); else if ("e" == t.charAt(0)) "undefined" != typeof e.errorCallback && null != e.errorCallback && e.errorCallback(t.substring(1), e.context); else { var i = t.indexOf("|"); if (-1 != i) { var a = parseInt(t.substring(0, i)); if (!isNaN(a)) { var n = t.substring(i + 1, i + a + 1); if ("" != n) { var r = theForm.__EVENTVALIDATION; r || (r = document.createElement("INPUT"), r.type = "hidden", r.name = "__EVENTVALIDATION", theForm.appendChild(r)), r.value = n } "undefined" != typeof e.eventCallback && null != e.eventCallback && e.eventCallback(t.substring(i + a + 1), e.context) } } } } function WebForm_FillFirstAvailableSlot(e, t) { var i; for (i = 0; i < e.length && e[i]; i++); return e[i] = t, i } function WebForm_InitCallback() { for (var e, t = theForm.elements, i = t.length, a = 0; i > a; a++) { e = t[a]; var n = e.tagName.toLowerCase(); if ("input" == n) { var r = e.type; (__callbackTextTypes.test(r) || ("checkbox" == r || "radio" == r) && e.checked) && "__EVENTVALIDATION" != e.id && WebForm_InitCallbackAddField(e.name, e.value) } else if ("select" == n) for (var s = e.options.length, o = 0; s > o; o++) { var l = e.options[o]; 1 == l.selected && WebForm_InitCallbackAddField(e.name, e.value) } else "textarea" == n && WebForm_InitCallbackAddField(e.name, e.value) } } function WebForm_InitCallbackAddField(e, t) { var i = new Object; i.name = e, i.value = t, __theFormPostCollection[__theFormPostCollection.length] = i, __theFormPostData += WebForm_EncodeCallback(e) + "=" + WebForm_EncodeCallback(t) + "&" } function WebForm_EncodeCallback(e) { return encodeURIComponent ? encodeURIComponent(e) : escape(e) } function WebForm_ReEnableControls() { if ("undefined" == typeof __enabledControlArray) return !1; for (var e = 0, t = 0; t < __enabledControlArray.length; t++) { var i; i = __nonMSDOMBrowser ? document.getElementById(__enabledControlArray[t]) : document.all[__enabledControlArray[t]], "undefined" != typeof i && null != i && 1 == i.disabled && (i.disabled = !1, __disabledControlArray[e++] = i) } return setTimeout("WebForm_ReDisableControls()", 0), !0 } function WebForm_ReDisableControls() { for (var e = 0; e < __disabledControlArray.length; e++) __disabledControlArray[e].disabled = !0 } function WebForm_SimulateClick(e, t) { var i; if (e) { if (e.click) e.click(); else if (i = document.createEvent("MouseEvents"), i.initMouseEvent("click", !0, !0, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), !e.dispatchEvent(i)) return !0; return t.cancelBubble = !0, t.stopPropagation && t.stopPropagation(), !1 } return !0 } function WebForm_FireDefaultButton(e, t) { if (13 == e.keyCode) { var i = e.srcElement || e.target; if (i && "input" == i.tagName.toLowerCase() && ("submit" == i.type.toLowerCase() || "button" == i.type.toLowerCase()) || "a" == i.tagName.toLowerCase() && null != i.href && "" != i.href || "textarea" == i.tagName.toLowerCase()) return !0; var a; if (a = __nonMSDOMBrowser ? document.getElementById(t) : document.all[t]) return WebForm_SimulateClick(a, e) } return !0 } function WebForm_GetScrollX() { return __nonMSDOMBrowser ? window.pageXOffset : document.documentElement && document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body ? document.body.scrollLeft : 0 } function WebForm_GetScrollY() { return __nonMSDOMBrowser ? window.pageYOffset : document.documentElement && document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body ? document.body.scrollTop : 0 } function WebForm_SaveScrollPositionSubmit() { return __nonMSDOMBrowser ? (theForm.elements.__SCROLLPOSITIONY.value = window.pageYOffset, theForm.elements.__SCROLLPOSITIONX.value = window.pageXOffset) : (theForm.__SCROLLPOSITIONX.value = WebForm_GetScrollX(), theForm.__SCROLLPOSITIONY.value = WebForm_GetScrollY()), "undefined" != typeof this.oldSubmit && null != this.oldSubmit ? this.oldSubmit() : !0 } function WebForm_SaveScrollPositionOnSubmit() { return theForm.__SCROLLPOSITIONX.value = WebForm_GetScrollX(), theForm.__SCROLLPOSITIONY.value = WebForm_GetScrollY(), "undefined" != typeof this.oldOnSubmit && null != this.oldOnSubmit ? this.oldOnSubmit() : !0 } function WebForm_RestoreScrollPosition() { return __nonMSDOMBrowser ? window.scrollTo(theForm.elements.__SCROLLPOSITIONX.value, theForm.elements.__SCROLLPOSITIONY.value) : window.scrollTo(theForm.__SCROLLPOSITIONX.value, theForm.__SCROLLPOSITIONY.value), "undefined" != typeof theForm.oldOnLoad && null != theForm.oldOnLoad ? theForm.oldOnLoad() : !0 } function WebForm_TextBoxKeyHandler(e) { if (13 == e.keyCode) { var t; if (t = __nonMSDOMBrowser ? e.target : e.srcElement, "undefined" != typeof t && null != t && "undefined" != typeof t.onchange) return t.onchange(), e.cancelBubble = !0, e.stopPropagation && e.stopPropagation(), !1 } return !0 } function WebForm_TrimString(e) { return e.replace(/^\s+|\s+$/g, "") } function WebForm_AppendToClassName(e, t) { var i = " " + WebForm_TrimString(e.className) + " "; t = WebForm_TrimString(t); var a = i.indexOf(" " + t + " "); -1 === a && (e.className = "" === e.className ? t : e.className + " " + t) } function WebForm_RemoveClassName(e, t) { var i = " " + WebForm_TrimString(e.className) + " "; t = WebForm_TrimString(t); var a = i.indexOf(" " + t + " "); a >= 0 && (e.className = WebForm_TrimString(i.substring(0, a) + " " + i.substring(a + t.length + 1, i.length))) } function WebForm_GetElementById(e) { return document.getElementById ? document.getElementById(e) : document.all ? document.all[e] : null } function WebForm_GetElementByTagName(e, t) { var i = WebForm_GetElementsByTagName(e, t); return i && i.length > 0 ? i[0] : null } function WebForm_GetElementsByTagName(e, t) { if (e && t) { if (e.getElementsByTagName) return e.getElementsByTagName(t); if (e.all && e.all.tags) return e.all.tags(t) } return null } function WebForm_GetElementDir(e) { return e ? e.dir ? e.dir : WebForm_GetElementDir(e.parentNode) : "ltr" } function WebForm_GetElementPosition(e) { var t = new Object; if (t.x = 0, t.y = 0, t.width = 0, t.height = 0, e.offsetParent) { t.x = e.offsetLeft, t.y = e.offsetTop; for (var i = e.offsetParent; i;) { t.x += i.offsetLeft, t.y += i.offsetTop; var a = i.tagName.toLowerCase(); "table" != a && "body" != a && "html" != a && "div" != a && i.clientTop && i.clientLeft && (t.x += i.clientLeft, t.y += i.clientTop), i = i.offsetParent } } else e.left && e.top ? (t.x = e.left, t.y = e.top) : (e.x && (t.x = e.x), e.y && (t.y = e.y)); return e.offsetWidth && e.offsetHeight ? (t.width = e.offsetWidth, t.height = e.offsetHeight) : e.style && e.style.pixelWidth && e.style.pixelHeight && (t.width = e.style.pixelWidth, t.height = e.style.pixelHeight), t } function WebForm_GetParentByTagName(e, t) { for (var i = e.parentNode, a = t.toUpperCase() ; i && i.tagName.toUpperCase() != a;) i = i.parentNode ? i.parentNode : i.parentElement; return i } function WebForm_SetElementHeight(e, t) { e && e.style && (e.style.height = t + "px") } function WebForm_SetElementWidth(e, t) { e && e.style && (e.style.width = t + "px") } function WebForm_SetElementX(e, t) { e && e.style && (e.style.left = t + "px") } function WebForm_SetElementY(e, t) { e && e.style && (e.style.top = t + "px") } var __pendingCallbacks = new Array, __synchronousCallBackIndex = -1, __nonMSDOMBrowser = -1 == window.navigator.appName.toLowerCase().indexOf("explorer"), __theFormPostData = "", __theFormPostCollection = new Array, __callbackTextTypes = /^(text|password|hidden|search|tel|url|email|number|range|color|datetime|date|month|week|time|datetime-local)$/i, __disabledControlArray = new Array;